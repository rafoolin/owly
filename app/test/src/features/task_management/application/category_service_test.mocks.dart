// Mocks generated by Mockito 5.2.0 from annotations
// in owly/test/src/features/task_management/application/category_service_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;
import 'dart:ui' as _i8;

import 'package:hooks_riverpod/hooks_riverpod.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:owly/src/features/task_management/data/remote_category_repository.dart'
    as _i2;
import 'package:owly/src/features/task_management/domain/todo_category.dart'
    as _i5;
import 'package:owly/src/features/task_management/domain/todo_sub_task.dart'
    as _i7;
import 'package:owly/src/features/task_management/domain/todo_task.dart' as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

/// A class which mocks [RemoteCategoryRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoteCategoryRepository extends _i1.Mock
    implements _i2.RemoteCategoryRepository {
  MockRemoteCategoryRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Stream<_i4.AsyncValue<List<_i5.TodoCategory>>> watchCategories() =>
      (super.noSuchMethod(Invocation.method(#watchCategories, []),
              returnValue:
                  Stream<_i4.AsyncValue<List<_i5.TodoCategory>>>.empty())
          as _i3.Stream<_i4.AsyncValue<List<_i5.TodoCategory>>>);
  @override
  _i3.Stream<_i4.AsyncValue<List<_i6.TodoTask>>> subscribeTasks(
          String? categoryId) =>
      (super.noSuchMethod(Invocation.method(#subscribeTasks, [categoryId]),
              returnValue: Stream<_i4.AsyncValue<List<_i6.TodoTask>>>.empty())
          as _i3.Stream<_i4.AsyncValue<List<_i6.TodoTask>>>);
  @override
  _i3.Future<void> addTask(
          {String? title,
          String? categoryId,
          DateTime? dueDatetime,
          String? note,
          List<_i7.TodoSubTask>? subTasks = const []}) =>
      (super.noSuchMethod(
          Invocation.method(#addTask, [], {
            #title: title,
            #categoryId: categoryId,
            #dueDatetime: dueDatetime,
            #note: note,
            #subTasks: subTasks
          }),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i3.Future<void>);
  @override
  _i3.Future<void> addCategory({String? name, _i8.Color? color}) =>
      (super.noSuchMethod(
          Invocation.method(#addCategory, [], {#name: name, #color: color}),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i3.Future<void>);
  @override
  _i3.Future<void> editCategory({String? name, _i8.Color? color}) =>
      (super.noSuchMethod(
          Invocation.method(#editCategory, [], {#name: name, #color: color}),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i3.Future<void>);
  @override
  _i3.Future<void> deleteCategory(String? id) =>
      (super.noSuchMethod(Invocation.method(#deleteCategory, [id]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i3.Future<void>);
}
