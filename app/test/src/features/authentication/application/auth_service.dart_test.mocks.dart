// Mocks generated by Mockito 5.2.0 from annotations
// in owly/test/src/features/authentication/application/auth_service.dart_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;

import 'package:hooks_riverpod/hooks_riverpod.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:nhost_sdk/nhost_sdk.dart' as _i4;
import 'package:owly/src/common/models/app_credential.dart' as _i7;
import 'package:owly/src/features/authentication/data/local_auth_repository.dart'
    as _i6;
import 'package:owly/src/features/authentication/data/remote_auth_repository.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeAsyncValue_0<T> extends _i1.Fake implements _i2.AsyncValue<T> {}

/// A class which mocks [RemoteAuthRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoteAuthRepository extends _i1.Mock
    implements _i3.RemoteAuthRepository {
  MockRemoteAuthRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void Function(void Function(_i4.AuthenticationState))
      get addAuthStateChangedCallback =>
          (super.noSuchMethod(Invocation.getter(#addAuthStateChangedCallback),
                  returnValue: (void Function(_i4.AuthenticationState) __p0) {})
              as void Function(void Function(_i4.AuthenticationState)));
  @override
  _i4.AuthenticationState get authenticationState =>
      (super.noSuchMethod(Invocation.getter(#authenticationState),
              returnValue: _i4.AuthenticationState.inProgress)
          as _i4.AuthenticationState);
  @override
  _i5.Future<_i2.AsyncValue<_i4.AuthResponse?>> signInEmailPassword(
          {String? email, String? password}) =>
      (super.noSuchMethod(
          Invocation.method(
              #signInEmailPassword, [], {#email: email, #password: password}),
          returnValue: Future<_i2.AsyncValue<_i4.AuthResponse?>>.value(
              _FakeAsyncValue_0<_i4.AuthResponse?>())) as _i5
          .Future<_i2.AsyncValue<_i4.AuthResponse?>>);
  @override
  _i5.Future<_i2.AsyncValue<_i4.AuthResponse>> signOut() =>
      (super.noSuchMethod(Invocation.method(#signOut, []),
              returnValue: Future<_i2.AsyncValue<_i4.AuthResponse>>.value(
                  _FakeAsyncValue_0<_i4.AuthResponse>()))
          as _i5.Future<_i2.AsyncValue<_i4.AuthResponse>>);
  @override
  _i5.Future<_i2.AsyncValue<_i4.AuthResponse>> signUp(
          {String? email,
          String? password,
          String? locale,
          String? defaultRole,
          List<String>? roles,
          String? displayName,
          String? redirectTo}) =>
      (super.noSuchMethod(
              Invocation.method(#signUp, [], {
                #email: email,
                #password: password,
                #locale: locale,
                #defaultRole: defaultRole,
                #roles: roles,
                #displayName: displayName,
                #redirectTo: redirectTo
              }),
              returnValue: Future<_i2.AsyncValue<_i4.AuthResponse>>.value(
                  _FakeAsyncValue_0<_i4.AuthResponse>()))
          as _i5.Future<_i2.AsyncValue<_i4.AuthResponse>>);
  @override
  _i5.Future<_i2.AsyncValue<void>> resetPassword(String? email) =>
      (super.noSuchMethod(Invocation.method(#resetPassword, [email]),
              returnValue:
                  Future<_i2.AsyncValue<void>>.value(_FakeAsyncValue_0<void>()))
          as _i5.Future<_i2.AsyncValue<void>>);
}

/// A class which mocks [LocalAuthRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocalAuthRepository extends _i1.Mock
    implements _i6.LocalAuthRepository {
  MockLocalAuthRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.AsyncValue<_i7.AppCredential?>> getCredential() =>
      (super.noSuchMethod(Invocation.method(#getCredential, []),
              returnValue: Future<_i2.AsyncValue<_i7.AppCredential?>>.value(
                  _FakeAsyncValue_0<_i7.AppCredential?>()))
          as _i5.Future<_i2.AsyncValue<_i7.AppCredential?>>);
  @override
  _i5.Future<_i2.AsyncValue<_i7.AppCredential>> updateCredential(
          _i7.AppCredential? credential) =>
      (super.noSuchMethod(Invocation.method(#updateCredential, [credential]),
              returnValue: Future<_i2.AsyncValue<_i7.AppCredential>>.value(
                  _FakeAsyncValue_0<_i7.AppCredential>()))
          as _i5.Future<_i2.AsyncValue<_i7.AppCredential>>);
  @override
  _i5.Future<_i2.AsyncValue<void>> clearCredential() =>
      (super.noSuchMethod(Invocation.method(#clearCredential, []),
              returnValue:
                  Future<_i2.AsyncValue<void>>.value(_FakeAsyncValue_0<void>()))
          as _i5.Future<_i2.AsyncValue<void>>);
}
