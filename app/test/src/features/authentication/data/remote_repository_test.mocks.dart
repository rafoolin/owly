// Mocks generated by Mockito 5.2.0 from annotations
// in owly/test/src/features/authentication/data/remote_repository_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:nhost_sdk/src/api/auth_api_types.dart' as _i2;
import 'package:nhost_sdk/src/auth_client.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeAuthResponse_0 extends _i1.Fake implements _i2.AuthResponse {}

class _FakeMultiFactorAuthResponse_1 extends _i1.Fake
    implements _i2.MultiFactorAuthResponse {}

/// A class which mocks [AuthClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthClient extends _i1.Mock implements _i3.AuthClient {
  MockAuthClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.AuthenticationState get authenticationState =>
      (super.noSuchMethod(Invocation.getter(#authenticationState),
              returnValue: _i3.AuthenticationState.inProgress)
          as _i3.AuthenticationState);
  @override
  String? getClaim(String? jwtClaim) =>
      (super.noSuchMethod(Invocation.method(#getClaim, [jwtClaim])) as String?);
  @override
  void close() => super.noSuchMethod(Invocation.method(#close, []),
      returnValueForMissingStub: null);
  @override
  _i3.UnsubscribeDelegate addTokenChangedCallback(
          _i3.TokenChangedCallback? callback) =>
      (super.noSuchMethod(
          Invocation.method(#addTokenChangedCallback, [callback]),
          returnValue: () {}) as _i3.UnsubscribeDelegate);
  @override
  _i3.UnsubscribeDelegate addAuthStateChangedCallback(
          _i3.AuthStateChangedCallback? callback) =>
      (super.noSuchMethod(
          Invocation.method(#addAuthStateChangedCallback, [callback]),
          returnValue: () {}) as _i3.UnsubscribeDelegate);
  @override
  _i3.UnsubscribeDelegate addSessionRefreshFailedCallback(
          _i3.SessionRefreshFailedCallback? callback) =>
      (super.noSuchMethod(
          Invocation.method(#addSessionRefreshFailedCallback, [callback]),
          returnValue: () {}) as _i3.UnsubscribeDelegate);
  @override
  _i4.Future<_i2.AuthResponse> signUp(
          {String? email,
          String? password,
          String? locale,
          String? defaultRole,
          List<String>? roles,
          String? displayName,
          String? redirectTo}) =>
      (super.noSuchMethod(
              Invocation.method(#signUp, [], {
                #email: email,
                #password: password,
                #locale: locale,
                #defaultRole: defaultRole,
                #roles: roles,
                #displayName: displayName,
                #redirectTo: redirectTo
              }),
              returnValue:
                  Future<_i2.AuthResponse>.value(_FakeAuthResponse_0()))
          as _i4.Future<_i2.AuthResponse>);
  @override
  _i4.Future<_i2.AuthResponse> signInEmailPassword(
          {String? email, String? password}) =>
      (super.noSuchMethod(
          Invocation.method(
              #signInEmailPassword, [], {#email: email, #password: password}),
          returnValue:
              Future<_i2.AuthResponse>.value(_FakeAuthResponse_0())) as _i4
          .Future<_i2.AuthResponse>);
  @override
  _i4.Future<void> signInWithEmailPasswordless(String? email,
          {String? redirectTo}) =>
      (super.noSuchMethod(
          Invocation.method(
              #signInWithEmailPasswordless, [email], {#redirectTo: redirectTo}),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  _i4.Future<void> signInWithSmsPasswordless(String? phoneNumber) =>
      (super.noSuchMethod(
          Invocation.method(#signInWithSmsPasswordless, [phoneNumber]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  _i4.Future<_i2.AuthResponse> completeSmsPasswordlessSignIn(
          String? phoneNumber, String? otp) =>
      (super.noSuchMethod(
          Invocation.method(#completeSmsPasswordlessSignIn, [phoneNumber, otp]),
          returnValue:
              Future<_i2.AuthResponse>.value(_FakeAuthResponse_0())) as _i4
          .Future<_i2.AuthResponse>);
  @override
  _i4.Future<_i2.AuthResponse> signInWithStoredCredentials() =>
      (super.noSuchMethod(Invocation.method(#signInWithStoredCredentials, []),
              returnValue:
                  Future<_i2.AuthResponse>.value(_FakeAuthResponse_0()))
          as _i4.Future<_i2.AuthResponse>);
  @override
  _i4.Future<_i2.AuthResponse> signInWithRefreshToken(String? refreshToken) =>
      (super.noSuchMethod(
              Invocation.method(#signInWithRefreshToken, [refreshToken]),
              returnValue:
                  Future<_i2.AuthResponse>.value(_FakeAuthResponse_0()))
          as _i4.Future<_i2.AuthResponse>);
  @override
  _i4.Future<_i2.AuthResponse> signOut({bool? all = false}) =>
      (super.noSuchMethod(Invocation.method(#signOut, [], {#all: all}),
              returnValue:
                  Future<_i2.AuthResponse>.value(_FakeAuthResponse_0()))
          as _i4.Future<_i2.AuthResponse>);
  @override
  _i4.Future<void> sendVerificationEmail({String? email, String? redirectTo}) =>
      (super.noSuchMethod(
          Invocation.method(#sendVerificationEmail, [],
              {#email: email, #redirectTo: redirectTo}),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  _i4.Future<void> changeEmail(String? newEmail) =>
      (super.noSuchMethod(Invocation.method(#changeEmail, [newEmail]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  _i4.Future<void> changePassword({String? newPassword}) => (super.noSuchMethod(
      Invocation.method(#changePassword, [], {#newPassword: newPassword}),
      returnValue: Future<void>.value(),
      returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  _i4.Future<void> resetPassword({String? email, String? redirectTo}) =>
      (super.noSuchMethod(
          Invocation.method(
              #resetPassword, [], {#email: email, #redirectTo: redirectTo}),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  _i4.Future<_i2.MultiFactorAuthResponse> generateMfa() =>
      (super.noSuchMethod(Invocation.method(#generateMfa, []),
              returnValue: Future<_i2.MultiFactorAuthResponse>.value(
                  _FakeMultiFactorAuthResponse_1()))
          as _i4.Future<_i2.MultiFactorAuthResponse>);
  @override
  _i4.Future<void> enableMfa(String? totp) =>
      (super.noSuchMethod(Invocation.method(#enableMfa, [totp]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  _i4.Future<void> disableMfa(String? code) =>
      (super.noSuchMethod(Invocation.method(#disableMfa, [code]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  _i4.Future<_i2.AuthResponse> completeMfaSignIn(
          {String? otp, String? ticket}) =>
      (super.noSuchMethod(
              Invocation.method(
                  #completeMfaSignIn, [], {#otp: otp, #ticket: ticket}),
              returnValue:
                  Future<_i2.AuthResponse>.value(_FakeAuthResponse_0()))
          as _i4.Future<_i2.AuthResponse>);
  @override
  _i4.Future<void> completeOAuthProviderSignIn(Uri? redirectUrl) =>
      (super.noSuchMethod(
          Invocation.method(#completeOAuthProviderSignIn, [redirectUrl]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  _i4.Future<void> setSession(_i2.Session? session) =>
      (super.noSuchMethod(Invocation.method(#setSession, [session]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  _i4.Future<void> clearSession() =>
      (super.noSuchMethod(Invocation.method(#clearSession, []),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
}
